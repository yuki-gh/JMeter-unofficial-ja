<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="テスト計画" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUpスレッドグループ" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="ループコントローラ" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree/>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDownスレッドグループ" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="ループコントローラ" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="翻訳済" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="ループコントローラ" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="サンプラー" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP リクエスト" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="フロー制御アクション" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree/>
          <AjpSampler guiclass="AjpSamplerGui" testclass="AjpSampler" testname="AJP/1.3サンプラー" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </AjpSampler>
          <hashTree/>
          <FTPSampler guiclass="FtpTestSamplerGui" testclass="FTPSampler" testname="FTP リクエスト" enabled="true">
            <stringProp name="FTPSampler.server"></stringProp>
            <stringProp name="FTPSampler.port"></stringProp>
            <stringProp name="FTPSampler.filename"></stringProp>
            <stringProp name="FTPSampler.localfilename"></stringProp>
            <stringProp name="FTPSampler.inputdata"></stringProp>
            <boolProp name="FTPSampler.binarymode">false</boolProp>
            <boolProp name="FTPSampler.saveresponse">false</boolProp>
            <boolProp name="FTPSampler.upload">false</boolProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </FTPSampler>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShellサンプラー" enabled="true">
            <stringProp name="BeanShellSampler.query"></stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="JMS Point-to-Point" enabled="true">
            <stringProp name="JMSSampler.queueconnectionfactory"></stringProp>
            <stringProp name="JMSSampler.SendQueue"></stringProp>
            <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
            <intProp name="JMSSampler.communicationStyle">0</intProp>
            <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
            <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">false</boolProp>
            <stringProp name="JMSSampler.timeout"></stringProp>
            <stringProp name="JMSSampler.jmsNumberOfSamplesToAggregate"></stringProp>
            <stringProp name="HTTPSamper.xml_data"></stringProp>
            <stringProp name="JMSSampler.initialContextFactory"></stringProp>
            <stringProp name="JMSSampler.contextProviderUrl"></stringProp>
            <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <elementProp name="arguments" elementType="JMSProperties">
              <collectionProp name="JMSProperties.properties"/>
            </elementProp>
          </JMSSampler>
          <hashTree/>
          <SubscriberSampler guiclass="JMSSubscriberGui" testclass="SubscriberSampler" testname="JMSサブスクライバー" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory"></stringProp>
            <stringProp name="jms.provider_url"></stringProp>
            <stringProp name="jms.connection_factory"></stringProp>
            <stringProp name="jms.topic"></stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <stringProp name="jms.iterations">1</stringProp>
            <stringProp name="jms.read_response">true</stringProp>
            <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
            <stringProp name="jms_error_reconnect_on_codes"></stringProp>
          </SubscriberSampler>
          <hashTree/>
          <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="JMSパブリッシャー" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory"></stringProp>
            <stringProp name="jms.provider_url"></stringProp>
            <stringProp name="jms.connection_factory"></stringProp>
            <stringProp name="jms.topic"></stringProp>
            <stringProp name="jms.expiration"></stringProp>
            <stringProp name="jms_error_reconnect_on_codes"></stringProp>
            <stringProp name="jms.priority"></stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <stringProp name="jms.text_message"></stringProp>
            <stringProp name="jms.input_file"></stringProp>
            <stringProp name="jms.random_path"></stringProp>
            <stringProp name="jms.config_choice">jms_use_text</stringProp>
            <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
            <stringProp name="jms.iterations">1</stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <elementProp name="jms.jmsProperties" elementType="JMSProperties">
              <collectionProp name="JMSProperties.properties"/>
            </elementProp>
          </PublisherSampler>
          <hashTree/>
          <JUnitSampler guiclass="JUnitTestSamplerGui" testclass="JUnitSampler" testname="JUnitリクエスト" enabled="true">
            <stringProp name="junitSampler.classname">test.RerunTest</stringProp>
            <stringProp name="junitsampler.constructorstring"></stringProp>
            <stringProp name="junitsampler.method">testRerun</stringProp>
            <stringProp name="junitsampler.pkg.filter"></stringProp>
            <stringProp name="junitsampler.success">テスト成功</stringProp>
            <stringProp name="junitsampler.success.code">1000</stringProp>
            <stringProp name="junitsampler.failure">テスト失敗</stringProp>
            <stringProp name="junitsampler.failure.code">0001</stringProp>
            <stringProp name="junitsampler.error">予期しないエラーが発生</stringProp>
            <stringProp name="junitsampler.error.code">9999</stringProp>
            <stringProp name="junitsampler.exec.setup">false</stringProp>
            <stringProp name="junitsampler.append.error">false</stringProp>
            <stringProp name="junitsampler.append.exception">false</stringProp>
          </JUnitSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Java リクエスト" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Sleep_Time" elementType="Argument">
                  <stringProp name="Argument.name">Sleep_Time</stringProp>
                  <stringProp name="Argument.value">100</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sleep_Mask" elementType="Argument">
                  <stringProp name="Argument.name">Sleep_Mask</stringProp>
                  <stringProp name="Argument.value">0xFF</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Label" elementType="Argument">
                  <stringProp name="Argument.name">Label</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ResponseCode" elementType="Argument">
                  <stringProp name="Argument.name">ResponseCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ResponseMessage" elementType="Argument">
                  <stringProp name="Argument.name">ResponseMessage</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Status" elementType="Argument">
                  <stringProp name="Argument.name">Status</stringProp>
                  <stringProp name="Argument.value">OK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SamplerData" elementType="Argument">
                  <stringProp name="Argument.name">SamplerData</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ResultData" elementType="Argument">
                  <stringProp name="Argument.name">ResultData</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
          </JavaSampler>
          <hashTree/>
          <LDAPSampler guiclass="LdapTestSamplerGui" testclass="LDAPSampler" testname="LDAPリクエスト" enabled="true">
            <stringProp name="servername"></stringProp>
            <stringProp name="port"></stringProp>
            <stringProp name="rootdn"></stringProp>
            <boolProp name="user_defined">false</boolProp>
            <stringProp name="test">add</stringProp>
            <stringProp name="base_entry_dn"></stringProp>
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </LDAPSampler>
          <hashTree/>
          <LDAPExtSampler guiclass="LdapExtTestSamplerGui" testclass="LDAPExtSampler" testname="LDAP拡張リクエスト" enabled="true">
            <stringProp name="servername"></stringProp>
            <stringProp name="port"></stringProp>
            <stringProp name="rootdn"></stringProp>
            <stringProp name="scope">2</stringProp>
            <stringProp name="countlimit"></stringProp>
            <stringProp name="timelimit"></stringProp>
            <stringProp name="attributes"></stringProp>
            <stringProp name="return_object">false</stringProp>
            <stringProp name="deref_aliases">false</stringProp>
            <stringProp name="connection_timeout"></stringProp>
            <stringProp name="parseflag">false</stringProp>
            <stringProp name="secure">false</stringProp>
            <stringProp name="user_dn"></stringProp>
            <stringProp name="user_pw"></stringProp>
            <stringProp name="comparedn"></stringProp>
            <stringProp name="comparefilt"></stringProp>
            <stringProp name="modddn"></stringProp>
            <stringProp name="newdn"></stringProp>
          </LDAPExtSampler>
          <hashTree/>
          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="OSプロセスサンプラー" enabled="true">
            <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
            <stringProp name="SystemSampler.command"></stringProp>
            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SystemSampler.directory"></stringProp>
          </SystemSampler>
          <hashTree/>
          <SmtpSampler guiclass="SmtpSamplerGui" testclass="SmtpSampler" testname="SMTPサンプラー" enabled="true">
            <stringProp name="SMTPSampler.server"></stringProp>
            <stringProp name="SMTPSampler.serverPort"></stringProp>
            <stringProp name="SMTPSampler.mailFrom"></stringProp>
            <stringProp name="SMTPSampler.replyTo"></stringProp>
            <stringProp name="SMTPSampler.receiverTo"></stringProp>
            <stringProp name="SMTPSampler.receiverCC"></stringProp>
            <stringProp name="SMTPSampler.receiverBCC"></stringProp>
            <stringProp name="SMTPSampler.subject"></stringProp>
            <stringProp name="SMTPSampler.suppressSubject">false</stringProp>
            <stringProp name="SMTPSampler.include_timestamp">false</stringProp>
            <stringProp name="SMTPSampler.message"></stringProp>
            <stringProp name="SMTPSampler.plainBody">false</stringProp>
            <stringProp name="SMTPSampler.attachFile"></stringProp>
            <stringProp name="SMTPSampler.useSSL">false</stringProp>
            <stringProp name="SMTPSampler.useStartTLS">false</stringProp>
            <stringProp name="SMTPSampler.trustAllCerts">false</stringProp>
            <stringProp name="SMTPSampler.enforceStartTLS">false</stringProp>
            <stringProp name="SMTPSampler.useLocalTrustStore">false</stringProp>
            <stringProp name="SMTPSampler.trustStoreToUse"></stringProp>
            <stringProp name="SMTPSampler.tlsProtocols"></stringProp>
            <boolProp name="SMTPSampler.use_eml">false</boolProp>
            <stringProp name="SMTPSampler.emlMessageToSend"></stringProp>
            <stringProp name="SMTPSampler.useAuth">false</stringProp>
            <stringProp name="SMTPSampler.password"></stringProp>
            <stringProp name="SMTPSampler.username"></stringProp>
            <stringProp name="SMTPSampler.messageSizeStatistics">false</stringProp>
            <stringProp name="SMTPSampler.enableDebug">false</stringProp>
            <collectionProp name="SMTPSampler.headerFields"/>
          </SmtpSampler>
          <hashTree/>
          <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="TCPサンプラー" enabled="true">
            <stringProp name="TCPSampler.server"></stringProp>
            <boolProp name="TCPSampler.reUseConnection">true</boolProp>
            <stringProp name="TCPSampler.port"></stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout"></stringProp>
            <stringProp name="TCPSampler.request"></stringProp>
            <boolProp name="TCPSampler.closeConnection">false</boolProp>
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </TCPSampler>
          <hashTree/>
          <MailReaderSampler guiclass="MailReaderSamplerGui" testclass="MailReaderSampler" testname="メールリーダーサンプラー" enabled="true">
            <stringProp name="host_type">pop3</stringProp>
            <stringProp name="folder">INBOX</stringProp>
            <stringProp name="host"></stringProp>
            <stringProp name="username"></stringProp>
            <stringProp name="password"></stringProp>
            <intProp name="num_messages">-1</intProp>
            <boolProp name="delete">false</boolProp>
            <stringProp name="SMTPSampler.useSSL">false</stringProp>
            <stringProp name="SMTPSampler.useStartTLS">false</stringProp>
            <stringProp name="SMTPSampler.trustAllCerts">false</stringProp>
            <stringProp name="SMTPSampler.enforceStartTLS">false</stringProp>
            <stringProp name="SMTPSampler.useLocalTrustStore">false</stringProp>
            <stringProp name="SMTPSampler.trustStoreToUse"></stringProp>
            <stringProp name="SMTPSampler.tlsProtocols"></stringProp>
          </MailReaderSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="デバッグサンプラー" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ロジックコントローラ" enabled="true"/>
        <hashTree>
          <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include コントローラ" enabled="true">
            <stringProp name="IncludeController.includepath"></stringProp>
          </IncludeController>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If コントローラ" enabled="true">
            <stringProp name="IfController.condition"></stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="トランザクションコントローラ" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="ループコントローラ" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree/>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While コントローラ" enabled="true">
            <stringProp name="WhileController.condition"></stringProp>
          </WhileController>
          <hashTree/>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEachコントローラ" enabled="true">
            <stringProp name="ForeachController.inputVal"></stringProp>
            <stringProp name="ForeachController.returnVal"></stringProp>
            <boolProp name="ForeachController.useSeparator">true</boolProp>
          </ForeachController>
          <hashTree/>
          <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime コントローラ" enabled="true">
            <stringProp name="RunTime.seconds">1</stringProp>
          </RunTime>
          <hashTree/>
          <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="インタリーブコントローラ" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
            <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
          </InterleaveControl>
          <hashTree/>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="クリティカルセクションコントローラ" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree/>
          <RandomOrderController guiclass="RandomOrderControllerGui" testclass="RandomOrderController" testname="ランダム順序コントローラ" enabled="true"/>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="一度だけ実行されるコントローラ" enabled="true"/>
          <hashTree/>
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="乱数コントローラ" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
          </RandomController>
          <hashTree/>
          <RecordingController guiclass="RecordController" testclass="RecordingController" testname="記録コントローラ" enabled="true"/>
          <hashTree/>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="スループットコントローラ" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>1.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree/>
          <SwitchController guiclass="SwitchControllerGui" testclass="SwitchController" testname="Switch コントローラ" enabled="true">
            <stringProp name="SwitchController.value"></stringProp>
          </SwitchController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="モジュールコントローラ" enabled="true"/>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="アサーション" enabled="true"/>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="アサーション" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON アサーション" enabled="true">
            <stringProp name="JSON_PATH">$.</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="サイズアサーション" enabled="true">
            <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
            <stringProp name="SizeAssertion.size">5</stringProp>
            <intProp name="SizeAssertion.operator">6</intProp>
            <stringProp name="Assertion.scope">children</stringProp>
          </SizeAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPathアサーション" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">/</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">false</boolProp>
          </XPathAssertion>
          <hashTree/>
          <MD5HexAssertion guiclass="MD5HexAssertionGUI" testclass="MD5HexAssertion" testname="MD5Hexアサーション" enabled="true">
            <stringProp name="MD5HexAssertion.size"></stringProp>
          </MD5HexAssertion>
          <hashTree/>
          <SMIMEAssertion guiclass="SMIMEAssertionGui" testclass="SMIMEAssertion" testname="SMIME アサーション" enabled="true">
            <boolProp name="SMIMEAssert.verifySignature">false</boolProp>
            <boolProp name="SMIMEAssert.notSigned">false</boolProp>
            <stringProp name="SMIMEAssert.issuerDn"></stringProp>
            <stringProp name="SMIMEAssert.signerDn"></stringProp>
            <stringProp name="SMIMEAssert.signerSerial"></stringProp>
            <stringProp name="SMIMEAssert.signerEmail"></stringProp>
            <stringProp name="SMIMEAssert.signerCertFile"></stringProp>
            <boolProp name="SMIMEAssert.signerNoCheck">false</boolProp>
            <boolProp name="SMIMEAssert.signerCheckConstraints">false</boolProp>
            <boolProp name="SMIMEAssert.signerCheckByFile">false</boolProp>
            <stringProp name="SMIMEAssert.messagePosition"></stringProp>
          </SMIMEAssertion>
          <hashTree/>
          <XMLAssertion guiclass="XMLAssertionGui" testclass="XMLAssertion" testname="XML アサーション" enabled="true"/>
          <hashTree/>
          <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML スキーマアサーション" enabled="true">
            <stringProp name="xmlschema_assertion_filename"></stringProp>
          </XMLSchemaAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="アサーションの持続" enabled="true">
            <stringProp name="DurationAssertion.duration"></stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="タイマ" enabled="true"/>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="一様乱数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">0</stringProp>
            <stringProp name="RandomTimer.range">100.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="ガウス乱数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
            <stringProp name="RandomTimer.range">100.0</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
          <PoissonRandomTimer guiclass="PoissonRandomTimerGui" testclass="PoissonRandomTimer" testname="ポワソン乱数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </PoissonRandomTimer>
          <hashTree/>
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="定数スループットタイマ" enabled="true">
            <intProp name="calcMode">0</intProp>
            <doubleProp>
              <name>throughput</name>
              <value>0.0</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
          </ConstantThroughputTimer>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="前処理" enabled="true"/>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="ユーザーパラメータ" enabled="true">
            <collectionProp name="UserParameters.names"/>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1"/>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <AnchorModifier guiclass="AnchorModifierGui" testclass="AnchorModifier" testname="HTML リンクパーサ" enabled="true"/>
          <hashTree/>
          <URLRewritingModifier guiclass="URLRewritingModifierGui" testclass="URLRewritingModifier" testname="HTTP URL-Rewriting 修飾子" enabled="true">
            <stringProp name="argument_name"></stringProp>
            <boolProp name="path_extension">false</boolProp>
            <boolProp name="path_extension_no_equals">false</boolProp>
            <boolProp name="path_extension_no_questionmark">false</boolProp>
            <boolProp name="cache_value">false</boolProp>
            <boolProp name="encode">false</boolProp>
          </URLRewritingModifier>
          <hashTree/>
          <SampleTimeout guiclass="SampleTimeoutGui" testclass="SampleTimeout" testname="サンプルタイムアウト" enabled="true">
            <stringProp name="InterruptTimer.timeout">10000</stringProp>
          </SampleTimeout>
          <hashTree/>
          <RegExUserParameters guiclass="RegExUserParametersGui" testclass="RegExUserParameters" testname="正規表現ユーザーパラメータ" enabled="true">
            <stringProp name="RegExUserParameters.regex_ref_name"></stringProp>
            <stringProp name="RegExUserParameters.param_names_gr_nr"></stringProp>
            <stringProp name="RegExUserParameters.param_values_gr_nr"></stringProp>
          </RegExUserParameters>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="後処理" enabled="true"/>
        <hashTree>
          <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="CSSセレクタ抽出" enabled="true">
            <stringProp name="HtmlExtractor.refname"></stringProp>
            <stringProp name="HtmlExtractor.expr"></stringProp>
            <stringProp name="HtmlExtractor.attribute"></stringProp>
            <stringProp name="HtmlExtractor.default"></stringProp>
            <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
            <stringProp name="HtmlExtractor.match_number"></stringProp>
            <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
          </HtmlExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON 抽出" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames"></stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="境界抽出" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname"></stringProp>
            <stringProp name="BoundaryExtractor.lboundary"></stringProp>
            <stringProp name="BoundaryExtractor.rboundary"></stringProp>
            <stringProp name="BoundaryExtractor.default"></stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number"></stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正規表現抽出" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname"></stringProp>
            <stringProp name="RegexExtractor.regex"></stringProp>
            <stringProp name="RegexExtractor.template"></stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <XPath2Extractor guiclass="XPath2ExtractorGui" testclass="XPath2Extractor" testname="XPath2抽出" enabled="true">
            <stringProp name="XPathExtractor2.default"></stringProp>
            <stringProp name="XPathExtractor2.refname"></stringProp>
            <stringProp name="XPathExtractor2.matchNumber">0</stringProp>
            <stringProp name="XPathExtractor2.xpathQuery"></stringProp>
            <stringProp name="XPathExtractor2.namespaces"></stringProp>
          </XPath2Extractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath抽出" enabled="true">
            <stringProp name="XPathExtractor.default"></stringProp>
            <stringProp name="XPathExtractor.refname"></stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery"></stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="アクションハンドラの終了状態" enabled="true">
            <intProp name="OnError.action">0</intProp>
          </ResultAction>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="設定エレメント" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers"/>
          </HeaderManager>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP クッキーマネージャ" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          </CookieManager>
          <hashTree/>
          <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP キャッシュマネージャ" enabled="true">
            <boolProp name="clearEachIteration">false</boolProp>
            <boolProp name="useExpires">true</boolProp>
          </CacheManager>
          <hashTree/>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP リクエスト初期値設定" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS キャッシュマネージャ" enabled="true">
            <collectionProp name="DNSCacheManager.servers"/>
            <boolProp name="DNSCacheManager.clearEachIteration">false</boolProp>
            <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
          </DNSCacheManager>
          <hashTree/>
          <ConfigTestElement guiclass="FtpConfigGui" testclass="ConfigTestElement" testname="FTP リクエスト初期値設定" enabled="true">
            <stringProp name="FTPSampler.server"></stringProp>
            <stringProp name="FTPSampler.port"></stringProp>
            <stringProp name="FTPSampler.filename"></stringProp>
            <stringProp name="FTPSampler.localfilename"></stringProp>
            <stringProp name="FTPSampler.inputdata"></stringProp>
            <boolProp name="FTPSampler.binarymode">false</boolProp>
            <boolProp name="FTPSampler.saveresponse">false</boolProp>
            <boolProp name="FTPSampler.upload">false</boolProp>
          </ConfigTestElement>
          <hashTree/>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP 認証マネージャ" enabled="true">
            <collectionProp name="AuthManager.auth_list"/>
          </AuthManager>
          <hashTree/>
          <JavaConfig guiclass="JavaConfigGui" testclass="JavaConfig" testname="Java リクエスト初期値設定" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Sleep_Time" elementType="Argument">
                  <stringProp name="Argument.name">Sleep_Time</stringProp>
                  <stringProp name="Argument.value">100</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sleep_Mask" elementType="Argument">
                  <stringProp name="Argument.name">Sleep_Mask</stringProp>
                  <stringProp name="Argument.value">0xFF</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Label" elementType="Argument">
                  <stringProp name="Argument.name">Label</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ResponseCode" elementType="Argument">
                  <stringProp name="Argument.name">ResponseCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ResponseMessage" elementType="Argument">
                  <stringProp name="Argument.name">ResponseMessage</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Status" elementType="Argument">
                  <stringProp name="Argument.name">Status</stringProp>
                  <stringProp name="Argument.value">OK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SamplerData" elementType="Argument">
                  <stringProp name="Argument.name">SamplerData</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ResultData" elementType="Argument">
                  <stringProp name="Argument.name">ResultData</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
          </JavaConfig>
          <hashTree/>
          <ConfigTestElement guiclass="LdapExtConfigGui" testclass="ConfigTestElement" testname="LDAP 拡張リクエスト初期値設定" enabled="true">
            <stringProp name="servername"></stringProp>
            <stringProp name="port"></stringProp>
            <stringProp name="rootdn"></stringProp>
            <stringProp name="scope">2</stringProp>
            <stringProp name="countlimit"></stringProp>
            <stringProp name="timelimit"></stringProp>
            <stringProp name="attributes"></stringProp>
            <stringProp name="return_object">false</stringProp>
            <stringProp name="deref_aliases">false</stringProp>
            <stringProp name="connection_timeout"></stringProp>
            <stringProp name="parseflag">false</stringProp>
            <stringProp name="secure">false</stringProp>
            <stringProp name="user_dn"></stringProp>
            <stringProp name="user_pw"></stringProp>
            <stringProp name="comparedn"></stringProp>
            <stringProp name="comparefilt"></stringProp>
            <stringProp name="modddn"></stringProp>
            <stringProp name="newdn"></stringProp>
            <stringProp name="test">add</stringProp>
            <stringProp name="base_entry_dn"></stringProp>
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </ConfigTestElement>
          <hashTree/>
          <ConfigTestElement guiclass="LdapConfigGui" testclass="ConfigTestElement" testname="LDAPリクエスト初期値設定" enabled="true">
            <stringProp name="servername"></stringProp>
            <stringProp name="port"></stringProp>
            <stringProp name="rootdn"></stringProp>
            <boolProp name="user_defined">false</boolProp>
            <stringProp name="test">modify</stringProp>
            <stringProp name="base_entry_dn"></stringProp>
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </ConfigTestElement>
          <hashTree/>
          <ConfigTestElement guiclass="TCPConfigGui" testclass="ConfigTestElement" testname="TCPサンプラー設定" enabled="true">
            <stringProp name="TCPSampler.server"></stringProp>
            <boolProp name="TCPSampler.reUseConnection">true</boolProp>
            <stringProp name="TCPSampler.port"></stringProp>
            <boolProp name="TCPSampler.nodelay">false</boolProp>
            <stringProp name="TCPSampler.timeout"></stringProp>
            <stringProp name="TCPSampler.request"></stringProp>
            <boolProp name="TCPSampler.closeConnection">false</boolProp>
          </ConfigTestElement>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="カウンタ" enabled="true">
            <stringProp name="CounterConfig.start"></stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr"></stringProp>
            <stringProp name="CounterConfig.name"></stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <ConfigTestElement guiclass="SimpleConfigGui" testclass="ConfigTestElement" testname="シンプル設定エレメント" enabled="true"/>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </Arguments>
          <hashTree/>
          <ConfigTestElement guiclass="LoginConfigGui" testclass="ConfigTestElement" testname="ログイン設定エレメント" enabled="true">
            <stringProp name="ConfigTestElement.username"></stringProp>
            <stringProp name="ConfigTestElement.password"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSVデータセット構成" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames"></stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="リスナー" enabled="true"/>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="結果をツリーで表示" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="概要レポート" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="統計レポート" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="バックエンドリスナー" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="graphiteMetricsSender" elementType="Argument">
                  <stringProp name="Argument.name">graphiteMetricsSender</stringProp>
                  <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.graphite.TextGraphiteMetricsSender</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="graphiteHost" elementType="Argument">
                  <stringProp name="Argument.name">graphiteHost</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="graphitePort" elementType="Argument">
                  <stringProp name="Argument.name">graphitePort</stringProp>
                  <stringProp name="Argument.value">2003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rootMetricsPrefix" elementType="Argument">
                  <stringProp name="Argument.name">rootMetricsPrefix</stringProp>
                  <stringProp name="Argument.value">jmeter.</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="summaryOnly" elementType="Argument">
                  <stringProp name="Argument.name">summaryOnly</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="samplersList" elementType="Argument">
                  <stringProp name="Argument.name">samplersList</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="percentiles" elementType="Argument">
                  <stringProp name="Argument.name">percentiles</stringProp>
                  <stringProp name="Argument.value">90;95;99</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">org.apache.jmeter.visualizers.backend.graphite.GraphiteBackendListenerClient</stringProp>
          </BackendListener>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="アサーション 結果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="グラフ表示" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="シンプルデータライタ" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <MailerResultCollector guiclass="MailerVisualizer" testclass="MailerResultCollector" testname="メーラービジュアライザ" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <elementProp name="MailerResultCollector.mailer_model" elementType="MailerModel">
              <stringProp name="MailerModel.successLimit">2</stringProp>
              <stringProp name="MailerModel.failureLimit">2</stringProp>
              <stringProp name="MailerModel.failureSubject"></stringProp>
              <stringProp name="MailerModel.fromAddress"></stringProp>
              <stringProp name="MailerModel.smtpHost"></stringProp>
              <stringProp name="MailerModel.successSubject"></stringProp>
              <stringProp name="MailerModel.addressie"></stringProp>
            </elementProp>
            <stringProp name="filename"></stringProp>
          </MailerResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="レスポンス時間グラフ" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="応答をファイルへ保存" enabled="true">
            <stringProp name="FileSaver.filename"></stringProp>
            <boolProp name="FileSaver.errorsonly">false</boolProp>
            <boolProp name="FileSaver.successonly">false</boolProp>
            <boolProp name="FileSaver.skipsuffix">false</boolProp>
            <boolProp name="FileSaver.skipautonumber">false</boolProp>
          </ResultSaver>
          <hashTree/>
          <ResultCollector guiclass="ComparisonVisualizer" testclass="ResultCollector" testname="比較アサーションビジュアライザ" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <Summariser guiclass="SummariserGui" testclass="Summariser" testname="結果の概要を生成" enabled="true"/>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="結果を表で表示" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="統計グラフ" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="テストフラグメント" enabled="false"/>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="翻訳中" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="ループコントローラ" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="JSR223" enabled="true"/>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223前処理" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script"></stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223アサーション" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script"></stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223後処理" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script"></stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <JSR223Timer guiclass="TestBeanGUI" testclass="JSR223Timer" testname="JSR223タイマー" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script"></stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Timer>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223サンプラー" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script"></stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Listener guiclass="TestBeanGUI" testclass="JSR223Listener" testname="JSR223リスナー" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script"></stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Listener>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="BeanShell" enabled="true"/>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShellアサーション" enabled="true">
            <stringProp name="BeanShellAssertion.query"></stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="JDBC" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="その他" enabled="true"/>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="未翻訳" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="ループコントローラ" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="その他" enabled="true"/>
        <hashTree>
          <HTMLAssertion guiclass="HTMLAssertionGui" testclass="HTMLAssertion" testname="HTML アサーション" enabled="true">
            <longProp name="html_assertion_error_threshold">0</longProp>
            <longProp name="html_assertion_warning_threshold">0</longProp>
            <stringProp name="html_assertion_doctype">omit</stringProp>
            <boolProp name="html_assertion_errorsonly">false</boolProp>
            <longProp name="html_assertion_format">0</longProp>
            <stringProp name="html_assertion_filename"></stringProp>
          </HTMLAssertion>
          <hashTree/>
          <AccessLogSampler guiclass="TestBeanGUI" testclass="AccessLogSampler" testname="アクセスログサンプラー" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="domain"></stringProp>
            <boolProp name="imageParsing">false</boolProp>
            <stringProp name="logFile"></stringProp>
            <stringProp name="parserClassName">org.apache.jmeter.protocol.http.util.accesslog.TCLogParser</stringProp>
            <stringProp name="portString"></stringProp>
          </AccessLogSampler>
          <hashTree/>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="同期タイマー" enabled="true">
            <intProp name="groupSize">0</intProp>
            <longProp name="timeoutInMs">0</longProp>
          </SyncTimer>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="デバッグ後処理" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <CompareAssertion guiclass="TestBeanGUI" testclass="CompareAssertion" testname="比較アサーション" enabled="true">
            <boolProp name="compareContent">true</boolProp>
            <longProp name="compareTime">-1</longProp>
            <collectionProp name="stringsToSkip"/>
          </CompareAssertion>
          <hashTree/>
          <PreciseThroughputTimer guiclass="TestBeanGUI" testclass="PreciseThroughputTimer" testname="高精度スループットタイマー" enabled="true">
            <doubleProp>
              <name>allowedThroughputSurplus</name>
              <value>1.0</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
            <intProp name="batchSize">1</intProp>
            <intProp name="batchThreadDelay">0</intProp>
            <longProp name="duration">3600</longProp>
            <intProp name="exactLimit">10000</intProp>
            <longProp name="randomSeed">0</longProp>
            <doubleProp>
              <name>throughput</name>
              <value>100.0</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
            <intProp name="throughputPeriod">3600</intProp>
          </PreciseThroughputTimer>
          <hashTree/>
          <KeystoreConfig guiclass="TestBeanGUI" testclass="KeystoreConfig" testname="キーストア構成" enabled="true">
            <stringProp name="preload">True</stringProp>
            <stringProp name="clientCertAliasVarName"></stringProp>
            <stringProp name="startIndex"></stringProp>
            <stringProp name="endIndex"></stringProp>
          </KeystoreConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="ランダム変数" enabled="true">
            <stringProp name="variableName"></stringProp>
            <stringProp name="outputFormat"></stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="maximumValue"></stringProp>
            <stringProp name="randomSeed"></stringProp>
            <boolProp name="perThread">false</boolProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="BeanShell" enabled="true"/>
        <hashTree>
          <BeanShellTimer guiclass="TestBeanGUI" testclass="BeanShellTimer" testname="BeanShellタイマー" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script"></stringProp>
          </BeanShellTimer>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell前処理" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script"></stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell後処理" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script"></stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="BeanShellリスナー" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script"></stringProp>
          </BeanShellListener>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="JDBC" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBCリクエスト" enabled="true">
            <stringProp name="dataSource"></stringProp>
            <stringProp name="query"></stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCPreProcessor guiclass="TestBeanGUI" testclass="JDBCPreProcessor" testname="JDBC前処理" enabled="true">
            <stringProp name="dataSource"></stringProp>
            <stringProp name="query"></stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCPreProcessor>
          <hashTree/>
          <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC後処理" enabled="true">
            <stringProp name="dataSource"></stringProp>
            <stringProp name="query"></stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCPostProcessor>
          <hashTree/>
          <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC接続構成" enabled="true">
            <boolProp name="autocommit">true</boolProp>
            <stringProp name="checkQuery"></stringProp>
            <stringProp name="connectionAge">5000</stringProp>
            <stringProp name="dataSource"></stringProp>
            <stringProp name="dbUrl"></stringProp>
            <stringProp name="driver"></stringProp>
            <boolProp name="keepAlive">true</boolProp>
            <stringProp name="password"></stringProp>
            <stringProp name="poolMax">0</stringProp>
            <stringProp name="timeout">10000</stringProp>
            <stringProp name="transactionIsolation">DEFAULT</stringProp>
            <stringProp name="trimInterval">60000</stringProp>
            <stringProp name="username"></stringProp>
          </JDBCDataSource>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP プロキシサーバ" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree/>
      <HttpMirrorControl guiclass="HttpMirrorControlGui" testclass="HttpMirrorControl" testname="HTTPミラーサーバ" enabled="true">
        <stringProp name="HttpMirrorControlGui.port">8081</stringProp>
        <stringProp name="HttpMirrorControlGui.maxPoolSize">0</stringProp>
        <stringProp name="HttpMirrorControlGui.maxQueueSize">25</stringProp>
      </HttpMirrorControl>
      <hashTree/>
      <ConfigTestElement guiclass="PropertyControlGui" testclass="ConfigTestElement" testname="プロパティ表示" enabled="true"/>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
